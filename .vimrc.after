set bg=dark

colorscheme solarized

set wildmenu

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

set cursorline
set colorcolumn=80
set cursorcolumn

let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1

let g:syntastic_go_checkers = ['go', 'golint', 'govet', 'errcheck']

let g:go_metalinter_deadline = "10s"

let g:syntastic_html_tidy_ignore_errors = ["proprietary attribute \"autofocus", "proprietary attribute \"ui-", "proprietary attribute \"ng-", "<form> proprietary attribute \"novalidate\"", "<form> lacks \"action\" attribute", "trimming empty <span>", "<input> proprietary attribute \"autofocus\"", "unescaped & which should be written as &amp;", "inserting implicit <span>", "<input> proprietary attribute \"required\"", "trimming empty <select>", "trimming empty <button>", "<img> lacks \"src\" attribute", "plain text isn't allowed in <head> elements", "<html> proprietary attribute \"app\"", "<link> escaping malformed URI reference", "</head> isn't allowed in <body> elements", "<script> escaping malformed URI reference", "discarding unexpected <body>", "'<' + '/' + letter not allowed here", "missing </script>", "proprietary attribute \"autocomplete\"", "trimming empty <i>", "proprietary attribute \"required\"", "proprietary attribute \"placeholder\"", "<ng-include> is not recognized!", "discarding unexpected <ng-include>", "missing </button>", "replacing unexpected button by </button>", "<ey-confirm> is not recognized!", "discarding unexpected <ey-confirm>", "discarding unexpected </ey-confirm>", "discarding unexpected </ng-include>"]

" Tagbar stuff
nmap <F8> :TagbarToggle<CR>
let g:tagbar_ctags_bin = "/usr/local/bin/ctags"

" vim-go stuff
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

" Show line numbers
set number

" Show matching braces
set showmatch

" Allow yank to OSX clipboard
noremap x "_x
noremap dd "_dd
set clipboard=unnamed

" Show list of buffers and prompt which number to switch to
nnoremap <F5> :buffers<CR>:buffer<Space>

" Show tabs and end of line chars
nnoremap <F2> :<C-U>setlocal lcs=tab:>-,trail:-,eol:$ list! list? <CR>

" CtrlP
nnoremap <silent> <Leader>f :CtrlP<CR>
nnoremap <silent> <leader>b :CtrlPBuffer<CR>
nnoremap <silent> <leader>m :CtrlPMRUFiles<CR>
nnoremap <silent> <leader>k :CtrlPBookmarkDir<CR>

" Map r to open NERDTree to buffer's directory
"map <leader>r :NERDTreeFind<cr>

" Use netrw
let g:netrw_liststyle=3
let g:netrw_preview=1
let g:netrw_winsize=25

" Set ag as the ack search program
let g:ackprg = 'ag --vimgrep'
